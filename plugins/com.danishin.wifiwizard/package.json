{
  "_args": [
    [
      {
        "raw": "https://github.com/danishin/WifiWizard.git",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "https://github.com/danishin/WifiWizard.git",
        "spec": "git+https://github.com/danishin/WifiWizard.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:danishin/WifiWizard.git",
          "sshUrl": "git+ssh://git@github.com/danishin/WifiWizard.git",
          "httpsUrl": "git+https://github.com/danishin/WifiWizard.git",
          "gitUrl": "git://github.com/danishin/WifiWizard.git",
          "shortcut": "github:danishin/WifiWizard",
          "directUrl": "https://raw.githubusercontent.com/danishin/WifiWizard/master/package.json"
        }
      },
      "C:\\Users\\Nurhakim Samah\\Projects\\omaya_app\\node_modules"
    ]
  ],
  "_from": "git+https://github.com/danishin/WifiWizard.git",
  "_id": "com.danishin.wifiwizard@0.2.11",
  "_inCache": true,
  "_location": "/com.danishin.wifiwizard",
  "_phantomChildren": {},
  "_requested": {
    "raw": "https://github.com/danishin/WifiWizard.git",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "https://github.com/danishin/WifiWizard.git",
    "spec": "git+https://github.com/danishin/WifiWizard.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:danishin/WifiWizard.git",
      "sshUrl": "git+ssh://git@github.com/danishin/WifiWizard.git",
      "httpsUrl": "git+https://github.com/danishin/WifiWizard.git",
      "gitUrl": "git://github.com/danishin/WifiWizard.git",
      "shortcut": "github:danishin/WifiWizard",
      "directUrl": "https://raw.githubusercontent.com/danishin/WifiWizard/master/package.json"
    }
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "git+https://github.com/danishin/WifiWizard.git#3ae31e0b68b54f4574758296cceaf4f53dfe1c23",
  "_shasum": "714ffae3e40c937935c225a7b30189c347fcc5b8",
  "_shrinkwrap": null,
  "_spec": "https://github.com/danishin/WifiWizard.git",
  "_where": "C:\\Users\\Nurhakim Samah\\Projects\\omaya_app\\node_modules",
  "author": {
    "name": "Matt Parsons"
  },
  "bugs": {
    "url": "https://github.com/danishin/wifiwizard/issues"
  },
  "cordova": {
    "id": "com.danishin.wifiwizard",
    "platforms": [
      "android",
      "ios"
    ]
  },
  "dependencies": {},
  "description": "This plugin allows Phonegap applications to manage Wifi connections.",
  "devDependencies": {},
  "gitHead": "3ae31e0b68b54f4574758296cceaf4f53dfe1c23",
  "homepage": "https://github.com/danishin/wifiwizard#readme",
  "keywords": [
    "phonegap",
    "network",
    "wifi",
    "ecosystem:cordova",
    "cordova-android",
    "cordova-ios"
  ],
  "license": "Apache 2.0",
  "name": "com.danishin.wifiwizard",
  "optionalDependencies": {},
  "readme": "# WifiWizard\r\n\r\nVersion 0.2.10\r\n\r\n`getCurrentBSSID` now available on IOS.\r\n\r\n~~Fixed callback issue with `connectNetwork`.~~\r\n\r\nUpdated permissions for Android Marshmallow.\r\n\r\nVersion 0.2.9\r\n\r\nThis Phonegap plugin enables WiFi management from within Phonegap applications.\r\n\r\niOS has limited functionality, as Apple's WifiManager equivalent is only available as a private API. Any app that used these features would not be allowed on the app store. The only function availabe for iOS is `getCurrentSSID`.\r\n\r\n### Installation\r\n\r\n#### Master\r\n\r\nRun `phonegap plugin install https://github.com/danishin/WifiWizard.git`. Please note that the plugin is in active development, and this will pull the most recent commits.\r\n\r\n#### Releases\r\n\r\nRun `cordova plugin add wifiwizard`. This will get the latest release of the plugin.\r\n\r\n### Usage from within Cordova/Phonegap:\r\n\r\n#### `WifiWizard.formatWifiConfig(SSID, password, algorithm);` \r\n\r\nFormats the wifi configuration information into a JSON for use with the addNetwork function. Currently, only WPA is supported for the `algorithm` value.\r\n\r\n#### `WifiWizard.formatWPAConfig(SSID, password);` \r\n\r\nIs a helper method. It returns an object which can be used to add a WPA wifi network.\r\n\r\n#### `WifiWizard.addNetwork(wifi, win, fail);` \r\n\r\nAdds the network to the list of available networks that the user can log into. `wifi` needs to be an object as formatted by formatWifiConfig. `win` and `fail` are callback functions to be executed based on the result of the call.\r\n\r\n#### `WifiWizard.removeNetwork(SSID, win, fail);` \r\n\r\nRemoves the network with the given SSID. As above, `win` and `fail` are callback functions.\r\n\r\n#### `WifiWizard.connectNetwork(SSID, win, fail);` \r\n\r\nConnects the phone to the given Wifi network. Returns the value of the Supplicant State.\r\n\r\n#### `WifiWizard.disconnectNetwork(SSID, win, fail);` \r\n\r\nDisconnects the phone to the given Wifi network.\r\n\r\n#### `WifiWizard.listNetworks(listHandler, fail);` \r\n\r\nRetrieves a list of the configured networks as an array of strings and passes them to the function listHandler.\r\n\r\n#### `WifiWizard.startScan(success, fail);` \r\n\r\nStart WiFi scanning. `success` is a function that is called when the scan is started. \r\n\r\n#### `WifiWizard.getScanResults([options], listHandler, fail);` \r\n\r\nRetrieves a list of the available networks as an array of objects and passes them to the function listHandler. The format of the array is:\r\n\r\n    networks = [\r\n        {   \"level\": signal_level, // raw RSSI value\r\n            \"SSID\": ssid, // SSID as string, with escaped double quotes: \"\\\"ssid name\\\"\"\r\n            \"BSSID\": bssid // MAC address of WiFi router as string\r\n            \"frequency\": frequency of the access point channel in MHz\r\n            \"capabilities\": capabilities // Describes the authentication, key management, and encryption schemes supported by the access point.\r\n        }\r\n    ]\r\n\r\nAn options object may be passed. Currently, the only supported option is `numLevels`, and it has the following behavior: \r\n\r\n- if `(n == true || n < 2)`, `*.getScanResults({numLevels: n})` will return data as before, split in 5 levels;\r\n- if `(n > 1)`, `*.getScanResults({numLevels: n})` will calculate the signal level, split in n levels;\r\n- if `(n == false)`, `*.getScanResults({numLevels: n})` will use the raw signal level;\r\n\r\n#### `WifiWizard.getCurrentSSID(ssidHandler, fail);` \r\n\r\nRetrieves the current SSID and passes it to ssidHandler.\r\n\r\n#### `WifiWizard.isWifiEnabled(win, fail);` \r\n\r\nRetrieves the current wifi status and passes `true` or `false` to the handler.\r\n\r\n#### `WifiWizard.setWifiEnabled(enabled, win, fail);` \r\n\r\nSet wifi status. `enabled` is a Boolean type, so to disable the Wifi, you'd execute `WifiWizard.setWifiEnabled(false, win, fail);`\r\n\r\n### Changelog:\r\n\r\n#### v0.2.9\r\n\r\n`isWifiEnabled` bug fixed. `level` in `getScanResults` object now refers to raw RSSI value. The function now accepts an options object, and by specifiying `{ numLevels: value }` you can get the old behavior.\r\n\r\n#### v0.2.8\r\n\r\n`getScanResults` now returns the BSSID along with the SSID and strength of the network.\r\n\r\n#### v0.2.7\r\n\r\n- Clobber WifiWizard.js automatically via Cordova plugin architecture\r\n\r\n#### v0.2.6 \r\n\r\n- Added `isWifiEnabled`, `setWifiEnabled`\r\n\r\n#### v0.2.5 \r\n\r\n- Fixes `getConnectedSSID` error handlers\r\n\r\n#### v0.2.4 \r\n\r\n- Added `getConnectedSSID` method\r\n\r\n#### v0.2.3 \r\n\r\n- Added `disconnect` that does disconnection on current WiFi\r\n\r\n#### v0.2.2 \r\n\r\n- Added `startScan` and `getScanResults`\r\n\r\n#### v0.2.1 \r\n\r\n- Fixed reference problem in `formatWPAConfig`\r\n\r\n#### v0.2.0 \r\n\r\n- Changed format of wifiConfiguration object to allow more extensibility.\r\n\r\n#### v0.1.1 \r\n\r\n- `addNetwork` will now update the network if the SSID already exists.\r\n\r\n#### v0.1.0 \r\n\r\n- All functions now work!\r\n\r\n#### v0.0.3 \r\n\r\n- Fixed errors in native implementation. Currently, Add and Remove networks aren't working, but others are working as expected.\r\n\r\n#### v0.0.2 \r\n\r\n- Changed plugin.xml and WifiWizard.js to attach WifiWizard directly to the HTML.\r\n\r\n#### v0.0.1 \r\n\r\n- Initial commit\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/danishin/WifiWizard.git"
  },
  "version": "0.2.11"
}
